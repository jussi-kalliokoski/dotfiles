" To see what these things do, use :help, for instance :help nocompatible

" If this stuff ends up in something else than .vimrc
" Cool VIM stuff, probably on already
set nocompatible
" This is nice, and also probably on already.
set showcmd
" Yes for REGCPY! \o/ Try "+yy and in another document window press p (paste).
" let g:clipBrdDefault='+'

set grepprg=grep\ -nH\ $*

" Ctrl h and l for scrolling tabs \o/
nnoremap <C-L> <Esc>:tabnext<CR>
nnoremap <C-H> <Esc>:tabprevious<CR>
" Space -> page down, I wish I knew how to map shift-space
nnoremap <space> <C-b>
" Clipboard
nnoremap <C-P> <Esc>:set paste<CR>:r !pbpaste<CR>:set nopaste<CR>
nnoremap <C-Y> <Esc>:.w !pbcopy<CR><CR>
xnoremap <C-Y> <Esc>:'<,'>:w !pbcopy<CR>
" Control-t for toggling between tab modes
nnoremap <C-T> <Esc>:call ToggleTabs()<CR>

" Colors are nice!
colorscheme desert

" Also, what to do with the colours if there's no syntax hilighting
filetype plugin	on
" filetype plugin indent on
filetype on
syntax enable
" Since we have colours, why not hilite.
" set hlsearch
" nevermind, highlighting sucks

" Pro tabs, hard, not expanded.
set tabstop=8
set softtabstop=8
set shiftwidth=8
set noexpandtab

" Line numbering
set number

" Mouse is not so nice when you're on a laptop (oops my sleeve touched the
" touchpad), set to 'a' when you need it.
set mouse=

" Disable automatic comments
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" Toggle between 4 spaces soft tabs and 8 spaces hard tabs with F2
function! ToggleTabs()
	if &tabstop == 8
		set tabstop=4
		set softtabstop=4
		set shiftwidth=4
		set expandtab
		echo "Toggled to soft tabs with 4 spaces per column."
	elseif &tabstop == 4
		set tabstop=2
		set softtabstop=2
		set shiftwidth=2
		set expandtab
		echo "Toggled to soft tabs with 2 spaces per column."
	else
		set tabstop=8
		set softtabstop=8
		set shiftwidth=8
		set noexpandtab
		echo "Toggled to hard tabs with 8 spaces per column."
	endif
endfunction


" Use templates

autocmd! BufNewFile * silent! 0r ~/.vim/skel/tmpl.%:e

" Vundle

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'groenewege/vim-less'
Bundle 'closetag.vim'
Bundle 'plasticboy/vim-markdown'
Bundle 'programble/ooc.vim'
Bundle 'hail2u/vim-css3-syntax'
Bundle 'groenewege/vim-less'
Bundle 'kchmck/vim-coffee-script'
Bundle 'mbbill/VimExplorer'

" enable ooc syntax highlighting
au BufNewFile,BufRead *.ooc set filetype=ooc

" enable markdown syntax highlighting
au BufNewFile,BufRead *.{md,mdown,mkd,mkdn,markdown,mdwn} set filetype=mkd

" enable less syntax highlighting
au BufNewFile,BufRead *.less set filetype=less

" enable coffeescript syntax highlighting
au BufNewFile,BufRead *.coffee set filetype=coffee

" enable handlebars syntax highlighting
au BufNewFile,BufRead *.handlebars set filetype=html

autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS

set list listchars=tab:→\ ,trail:·

set smartindent

set ruler
